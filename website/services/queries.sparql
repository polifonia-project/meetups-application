# RETRIEVE ALL BIOGRAPHIES (working)

PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?subject ?subject_label ?dob ?dod
WHERE {
    ?meetup  mtp:hasSubject ?subject .
    ?subject rdfs:label ?subject_label ;
    mtp:hasdob ?dob ;
    mtp:hasdod ?dod
}

# ==============================================================

# DETAILS PAGE FOR A SINGLE BIOGRAPHY (working)
# $biography = eg 'http://dbpedia.org/resource/Edward_Elgar'

PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo:	<http://dbpedia.org/ontology/>
SELECT DISTINCT  ?name ?comment ?image ?birthdate ?birthplacelabel
    WHERE {
        <'.$biography.'> rdfs:label ?name .
        <'.$biography.'> mtp:hasAbstract ?comment .
        OPTIONAL {
            <'.$biography.'> mtp:thumbnail ?image .
            <'.$biography.'> mtp:hasdob ?birthdate .
        }
        SERVICE <https://dbpedia.org/sparql/> {
        OPTIONAL {
            <'.$biography.'> dbo:birthPlace ?birthplace .
            ?birthplace rdfs:label ?birthplacelabel FILTER (langMatches(lang(?birthplacelabel),"en"))
        }
    }
}

# ==============================================================

# TOP 2 PLACES, FOR A GIVEN BIOGRAPHY/SUBJECT (working)
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ( COUNT( ?label) as ?count ) ?label
WHERE {
  ?s rdf:type mtp:Meetup ;
        mtp:hasSubject <http://dbpedia.org/resource/Edward_Elgar> ;
        mtp:hasType ?type . 
  FILTER (regex ( str (?type), str ("HM") ) ) . 
  ?s  mtp:hasPlace ?aPlaceIRI .
  ?aPlaceIRI mtp:hasEntity ?resource .  
  OPTIONAL { ?resource rdfs:label ?label } . 
}
GROUP BY ?label
ORDER BY DESC(?count)
LIMIT 2

# ==============================================================

# TOP 2 THEMES, FOR A GIVEN BIOGRAPHY/SUBJECT (working)
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ( COUNT( ?label) as ?count ) ?label
WHERE {
?s rdf:type mtp:Meetup ;
mtp:hasSubject <http://dbpedia.org/resource/Edward_Elgar> ;
mtp:hasType ?type .
FILTER (regex ( str (?type), str ("HM") ) ) .
?s mtp:hasPurpose ?aPurposeIRI .
?aPurposeIRI rdf:type mtp:Purpose ;
mtp:hasAPurposeFirst ?purpose1 .
?purpose1 rdfs:label ?label .
}
GROUP BY ?label
ORDER BY DESC(?count)
LIMIT 2

# ==============================================================

# TOP 2 PARTICIPANTS, FOR A GIVEN BIOGRAPHY/SUBJECT
# not working - new query required
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ( COUNT( ?label) as ?count ) ?label
...

# ==============================================================

# GET ALL THE MEETUPS AND CORRESPONDING DETAILS FOR A SINGLE SUBJECT/BIOGRAPHY (working)

PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <https://www.w3.org/2003/01/geo/wgs84_pos>
PREFIX time: <http://www.w3.org/2006/time#>

SELECT ?meetup ?evidence_text ?purpose
(GROUP_CONCAT( DISTINCT ?participant; separator=", " ) as ?participants_URI )
(GROUP_CONCAT( DISTINCT ?participant_label; separator=", " ) as ?participants_label )
(GROUP_CONCAT( DISTINCT ?location_uri; separator=", " ) as ?locations_URI )
(GROUP_CONCAT( DISTINCT ?location_label; separator=", " ) as ?locations_label )
?time_expression_URI ?beginDate ?endDate ?time_evidence_text ?lat ?long
WHERE
{
    VALUES ?subject { <http://dbpedia.org/resource/Edward_Elgar> }
    ?meetup rdf:type mtp:Meetup ;
        mtp:hasSubject ?subject ;
        mtp:hasEvidenceText ?evidence_text ;
        mtp:hasType ?type . 
  FILTER (regex ( str (?type), str ("HM") ) ) .
  ?meetup mtp:hasParticipant ?aParticipantIRI .
  ?aParticipantIRI rdf:type mtp:Participant ;
                   mtp:hasEntity ?participant .
  OPTIONAL { ?participant rdfs:label ?participant_label  } . 
  ?meetup mtp:hasPurpose ?aPurposeIRI .
  ?aPurposeIRI rdf:type mtp:Purpose ;
               mtp:hasAPurposeFirst ?purpose1 .    
  ?purpose1 rdfs:label ?purpose .
  ?meetup mtp:hasPlace ?aPlaceIRI .
  ?aPlaceIRI mtp:hasEntity ?location_uri .  
  OPTIONAL { ?location_uri rdfs:label ?location_label ;
  		geo:lat ?lat ;
        geo:long ?long . } . 
  ?meetup mtp:happensAt ?time_expression_URI .
    FILTER  (!regex (str(?participant), str(?subject) ) ) .
    ?participant rdfs:label ?participant_label .
    ?purpose_uri rdfs:label ?purpose .
    ?time_expression_URI mtp:hasEvidenceText ?hasEvidenceTextTimeExpression ;
    rdf:type ?typeTimeExpression .
    FILTER ( ?typeTimeExpression !=  mtp:TimeExpression ) .
    OPTIONAL {
        ?time_expression_URI time:hasBeginning ?beginDate;
            time:hasEnd ?endDate ;
            mtp:hasEvidenceText ?time_evidence_text .
    } .
}
GROUP BY ?meetup ?evidence_text ?purpose ?time_expression_URI ?beginDate ?endDate ?time_evidence_text ?lat ?long

# ==============================================================

# MEETUP SEARCH - this is the old search, not yet updated/working for the new KG

# Typical filter substitution currently looks like:
# FILTER (regex(str(?purpose), "<search_term>"))
# FILTER (regex(str(?subject), "<search_term>"))
# FILTER (regex(str(?participant), "<search_term>"))
# FILTER (regex(str(?location_label), "<search_term>"))

# bounds filter...
# FILTER (?long > -5.5) . FILTER (?long < 6.2) . FILTER (?lat > 45.78) . FILTER (?lat < 53.25)

PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <https://www.w3.org/2003/01/geo/wgs84_pos>
PREFIX time:   <http://www.w3.org/2006/time#>

SELECT ?subject_label ?subject ?meetup ?evidence_text ?purpose
(GROUP_CONCAT( DISTINCT ?participant; separator=", " ) as ?participants_URI )
(GROUP_CONCAT( DISTINCT ?participant_label; separator=", " ) as ?participants_label )
(GROUP_CONCAT( DISTINCT ?location_uri; separator=", " ) as ?locations_URI )
(GROUP_CONCAT( DISTINCT ?location_label; separator=", " ) as ?locations_label )
?time_expression_URI ?beginDate ?endDate ?time_evidence_text ?lat ?long
WHERE
{
    ?meetup rdf:type mtp:Meetup ;
        mtp:hasSubject ?subject ;
        mtp:hasParticipant ?participant ;
        mtp:hasAPurpose ?purpose_uri ;
        mtp:hasEvidenceText ?evidence_text ;
        mtp:hasPlace ?location_uri ;
        mtp:happensAt ?time_expression_URI .
    ?subject rdfs:label ?subject_label .
    '.$purposeFilter.'
    '.$subjectFilter.'
    '.$participantFilter.'
    '.$placeFilter.'
    '.$boundsFilter.'
    FILTER  (!regex (str(?participant), str(?subject) ) ) .
    ?participant rdfs:label ?participant_label .
    ?location_uri rdfs:label ?location_label ;
        geo:lat ?lat ;
        geo:long ?long .
    ?purpose_uri rdfs:label ?purpose .
    ?time_expression_URI 	mtp:hasEvidenceText  ?hasEvidenceTextTimeExpression ;
        rdf:type ?typeTimeExpression .
    FILTER ( ?typeTimeExpression !=  mtp:TimeExpression ) .
    OPTIONAL {
        ?time_expression_URI	time:hasBeginning ?beginDate;
            time:hasEnd ?endDate ;
            mtp:hasEvidenceText ?time_evidence_text .
    } .
}
GROUP BY ?subject_label ?subject ?meetup ?evidence_text ?purpose ?time_expression_URI ?beginDate ?endDate ?time_evidence_text ?lat ?long
LIMIT 500
