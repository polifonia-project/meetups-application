# RETRIEVE ALL BIOGRAPHIES (working)

PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

#SELECT ( count ( DISTINCT ?subject ) as ?bios ) 
# originally # of bios 10913. When mtp:dod optional, # of bios 29961
SELECT ?subject ?subject_label ?dob ?dod
WHERE {
    #?meetup  mtp:hasSubject ?subject .
    ?subject rdfs:label ?subject_label ;
    mtp:hasdob ?dob .
  OPTIONAL { ?subject mtp:hasdod ?dod }
  FILTER EXISTS {?meetup  mtp:hasSubject ?subject}
}

# ==============================================================

# DETAILS PAGE FOR A SINGLE BIOGRAPHY (working)
# $biography = eg 'http://dbpedia.org/resource/Edward_Elgar'

PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo:	<http://dbpedia.org/ontology/>
SELECT DISTINCT  ?name ?comment ?image ?birthdate ?birthplacelabel
    WHERE {
        <'.$biography.'> rdfs:label ?name .
        <'.$biography.'> mtp:hasAbstract ?comment .
        OPTIONAL {
            <'.$biography.'> mtp:thumbnail ?image .
            <'.$biography.'> mtp:hasdob ?birthdate .
        }
        SERVICE <https://dbpedia.org/sparql/> {
        OPTIONAL {
            <'.$biography.'> dbo:birthPlace ?birthplace .
            ?birthplace rdfs:label ?birthplacelabel FILTER (langMatches(lang(?birthplacelabel),"en"))
        }
    }
}

# ==============================================================

# TOP 2 PLACES, FOR A GIVEN BIOGRAPHY/SUBJECT (working)
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ( COUNT( ?label) as ?count ) ?label
WHERE {
  ?s mtp:hasSubject <http://dbpedia.org/resource/Diana_Damrau>  ;
       mtp:hasType "HM" .  
  ?s  mtp:hasPlace/mtp:hasEntity ?p . 
  OPTIONAL {?p rdfs:label ?labelTmp }.
  BIND ( COALESCE(?labelTmp, 
      REPLACE(STR(?p),"http://dbpedia.org/resource/","" )) AS ?label)
}
GROUP BY ?label ?p
ORDER BY DESC(?count)
LIMIT 2

# ==============================================================

# TOP 2 THEMES, FOR A GIVEN BIOGRAPHY/SUBJECT (working)
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ( COUNT( ?label) as ?count ) ?label
WHERE {
?s mtp:hasSubject <http://dbpedia.org/resource/Edward_Elgar> ;
mtp:hasType "HM" .
?s mtp:hasPurpose/mtp:hasAPurposeFirst/rdfs:label ?label .
}
GROUP BY ?label
ORDER BY DESC(?count)
LIMIT 2

# ==============================================================

# TOP 2 dates, FOR A GIVEN BIOGRAPHY/SUBJECT 
# $biography = eg 'http://dbpedia.org/resource/Edward_Elgar'
PREFIX time: <http://www.w3.org/2006/time#>
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ( COUNT( ?date) as ?count ) ?label
WHERE {
  ?s mtp:hasSubject <http://dbpedia.org/resource/Yehudi_Menuhin> ;
     mtp:hasType "HM" .
  ?s mtp:happensAt ?time_expression_URI .
  ?time_expression_URI rdf:type ?typeTimeExpression .
  ?time_expression_URI time:hasBeginning|time:hasEnd ?date .
  # Extract year from the xsd:date
  BIND(YEAR(?date) AS ?label)
}
GROUP BY ?label
ORDER BY DESC(?count)
LIMIT 2

# ==============================================================

# TOP 2 PARTICIPANTS, FOR A GIVEN BIOGRAPHY/SUBJECT
# new query - working
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ( COUNT( ?participant) as ?count ) ?label ?link
WHERE {
    # VALUES ?subject { <http://dbpedia.org/resource/Wolfgang_Amadeus_Mozart> }
  VALUES ?subject { <http://dbpedia.org/resource/Yehudi_Menuhin> }
    []  mtp:hasSubject ?subject ;
        mtp:hasType "HM" ;
        mtp:hasParticipant ?aParticipantIRI .
  ?aParticipantIRI mtp:hasEntity ?participant .
  FILTER ( ?participant != ?subject ) .
  OPTIONAL { ?participant rdfs:label ?label }
  OPTIONAL { ?aParticipantIRI mtp:hasTextEvidence ?temp_label .
    BIND ( COALESCE(?label, ?temp_label) AS ?label) . }
  OPTIONAL { FILTER EXISTS {
      [] mtp:hasSubject ?participant . }
    BIND (?participant AS ?link) }
}
GROUP BY ?label ?link
ORDER BY DESC(?count) ?participant

# ==============================================================

# GET ALL THE MEETUPS AND CORRESPONDING DETAILS FOR A SINGLE SUBJECT/BIOGRAPHY (working)
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <https://www.w3.org/2003/01/geo/wgs84_pos>
PREFIX time: <http://www.w3.org/2006/time#>
SELECT ?meetup ?evidence_text ?purpose ?meetuptype
(GROUP_CONCAT( DISTINCT ?participant; separator=", " ) as ?participants_URI )
(GROUP_CONCAT( DISTINCT ?participant_label; separator=", " ) as ?participants_label )
(GROUP_CONCAT( DISTINCT ?location_uri; separator=", " ) as ?locations_URI )
(GROUP_CONCAT( DISTINCT ?location_label; separator=", " ) as ?locations_label )
(GROUP_CONCAT( DISTINCT ?lat ; separator=", " ) as ?lats )
(GROUP_CONCAT( DISTINCT ?long ; separator=", " ) as ?longs )
(GROUP_CONCAT( DISTINCT ?time_expression_URI ; separator=", " ) as ?time_expression_URIs )
(GROUP_CONCAT( DISTINCT ?beginDate ; separator=", " ) as ?beginDates )
(GROUP_CONCAT( DISTINCT ?endDate ; separator=", " ) as ?endDates )
(GROUP_CONCAT( DISTINCT ?time_evidence_text ; separator=", " ) as ?time_evidence_texts )
WHERE {
  VALUES ?subject { <http://dbpedia.org/resource/Wolfgang_Amadeus_Mozart> }
  ?meetup mtp:hasSubject ?subject ;
          #mtp:hasType "HM" ;
          mtp:hasType ?meetuptype ;
          mtp:hasEvidenceText ?evidence_text ;
          mtp:hasParticipant ?aParticipantIRI .
  ?aParticipantIRI mtp:hasEntity ?participant ;
                   mtp:hasTextEvidence ?mentionPerson.
  FILTER NOT EXISTS { ?aParticipantIRI mtp:hasEntity ?subject } .
  OPTIONAL { ?participant rdfs:label ?part_tempLabel . }
  OPTIONAL { ?aParticipantIRI mtp:hasTextEvidence ?temp_label .
    BIND ( COALESCE(?part_tempLabel, ?temp_label) AS ?participant_label) . }
  ?meetup mtp:hasPurpose ?aPurposeIRI .
  ?aPurposeIRI rdf:type mtp:Purpose ;
  mtp:hasAPurposeFirst ?purpose1 .
  ?purpose1 rdfs:label ?purpose .
  ?meetup mtp:hasPlace ?aPlaceIRI .
  ?aPlaceIRI mtp:hasEntity ?location_uri .
  OPTIONAL { ?location_uri rdfs:label ?location_label ;
                           geo:lat ?lat ;
                           geo:long ?long . } .
  ?meetup mtp:happensAt ?time_expression_URI .
  ?time_expression_URI rdf:type ?typeTimeExpression .
  FILTER ( ?typeTimeExpression !=  mtp:TimeExpression ) .
  OPTIONAL { ?time_expression_URI time:hasBeginning ?beginDate ;
                                  time:hasEnd ?endDate }
  OPTIONAL { ?time_expression_URI mtp:hasEvidenceText ?time_evidence_text . } .
}
GROUP BY ?meetup ?evidence_text ?purpose ?meetuptype
ORDER BY ?meetup

# ==============================================================
# SEARCH EXAMPLE, using full text search instead of simple regex
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <https://www.w3.org/2003/01/geo/wgs84_pos>
PREFIX time: <http://www.w3.org/2006/time#>
SELECT ?meetup ?lit ?lit2 ?score ?score2
WHERE
{
    ?meetup mtp:hasSubject/rdfs:label ?lit .
    ?lit bds:search "Elgar" .
	?lit bds:matchAllTerms "true" .
	?lit bds:relevance ?score .

    ?meetup mtp:hasPlace/mtp:hasEntity/rdfs:label ?lit2 .
	?lit2 bds:search "London" .
	?lit2 bds:matchAllTerms "true" .
	?lit2 bds:relevance ?score2 .  
}
ORDER BY DESC(?score)
LIMIT 500


# ==============================================================

# MEETUP SEARCH - new search working using FullTextSearch 
# TODO: include dates and purpose search

PREFIX geo: <https://www.w3.org/2003/01/geo/wgs84_pos>
PREFIX bds: <http://www.bigdata.com/rdf/search#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX mtp: <http://w3id.org/polifonia/ontology/meetups-ontology#>  
PREFIX time: <http://www.w3.org/2006/time#>

SELECT ?meetup ?evidence_text ?purpose_Label
(GROUP_CONCAT( DISTINCT ?place_uri; separator=", " ) as ?locations_URI )
(GROUP_CONCAT( DISTINCT ?location_label; separator=", " ) as ?locations_label )
(GROUP_CONCAT( DISTINCT ?lat ; separator=", " ) as ?lats )
(GROUP_CONCAT( DISTINCT ?long ; separator=", " ) as ?longs )
(GROUP_CONCAT( DISTINCT ?participant_uri; separator=", " ) as ?participants_URI )
(GROUP_CONCAT( DISTINCT ?participant_label; separator=", " ) as ?participants_label ) 
(GROUP_CONCAT( DISTINCT ?time_expression_URI ; separator=", " ) as ?time_expression_URIs )
(GROUP_CONCAT( DISTINCT ?beginDate ; separator=", " ) as ?beginDates )
(GROUP_CONCAT( DISTINCT ?endDate ; separator=", " ) as ?endDates )
(GROUP_CONCAT( DISTINCT ?time_evidence_text ; separator=", " ) as ?time_evidence_texts )
WHERE{
  {
    # Search place
    ?meetup mtp:hasPlace/mtp:hasEntity/rdfs:label ?lit1 .
    ?lit1 bds:search "London" .
    ?lit1 bds:matchAllTerms "true" .
    
    # Search participant
    ?meetup mtp:hasParticipant/mtp:hasEntity/rdfs:label ?lit2 .
    ?lit2 bds:search "Edward" .
    ?lit2 bds:matchAllTerms "true" .
    } 
  # Complementary information
  { 
    ?meetup mtp:hasType "HM" ; 
            mtp:hasEvidenceText ?evidence_text ;
            mtp:hasSubject ?subject ;
            mtp:hasParticipant/mtp:hasEntity ?participant_uri ;
            mtp:hasPlace/mtp:hasEntity ?place_uri ;
            mtp:hasPurpose/mtp:hasAPurposeFirst ?purpose_uri ;
            mtp:happensAt ?time_expression_URI .
    # search by purpose
    # If the search by purpose is active, it is easier to search for the type of purpose using the URI
    # Comment the following when search by purpose is not active
    FILTER (?purpose_uri = <http://w3id.org/polifonia/pilot/meetups/musicmaking>)
    # list of purposes
	# <http://w3id.org/polifonia/pilot/meetups/musicmaking>
    # <http://w3id.org/polifonia/pilot/meetups/personallife>
	# <http://w3id.org/polifonia/pilot/meetups/education>
	# <http://w3id.org/polifonia/pilot/meetups/publiccelebration>
    # <http://w3id.org/polifonia/pilot/meetups/businessMeeting>
    # <http://w3id.org/polifonia/pilot/meetups/coincidence>
    
    # location
    OPTIONAL { ?place_uri rdfs:label ?place_tempLabel . } 
    BIND ( COALESCE(?place_tempLabel, REPLACE(STR(?place_uri),"http://dbpedia.org/resource/","" )) AS ?location_label)
    OPTIONAL { ?place_uri geo:lat ?lat ; geo:long ?long . } 
    # Search by coordinates, undocument when needed
	# FILTER (?long > -5.5) . FILTER (?long < 6.2) . FILTER (?lat > 45.78) . FILTER (?lat < 53.25) .
    
    # participant
    ?participant_uri rdf:type mtp:Participant .
    OPTIONAL { ?participant_uri rdfs:label ?part_tempLabel . }
    FILTER  (!regex (str(?part_tempLabel), str(?subject) ) || isBlank(?participant_uri) ) .
    OPTIONAL { ?participant_uri mtp:hasTextEvidence ?mentionPerson . } .
    BIND ( COALESCE(?part_tempLabel, ?mentionPerson) AS ?participant_label) .
    
    # purpose
    OPTIONAL { ?purpose_uri rdfs:label ?purpose_tempLabel . }
    BIND ( COALESCE(?purpose_tempLabel, "") AS ?purpose_Label )
    
    # time
  	?time_expression_URI rdf:type ?typeTimeExpression .
    FILTER ( ?typeTimeExpression !=  mtp:TimeExpression ) .
    OPTIONAL { ?time_expression_URI time:hasBeginning ?beginDate;
                             time:hasEnd ?endDate }
    OPTIONAL { ?time_expression_URI mtp:hasEvidenceText ?time_evidence_text .
    
    # SEARCH Extract year from the xsd:date
    # Use the following 4 lines for the date search, undocument when needed
    # BIND(YEAR(?beginDate) AS ?b_year)
    # FILTER ( ?b_year>=1890)
    # BIND(YEAR(?endDate) AS ?e_year)
    # FILTER ( ?e_year <=1900)
  }
}
GROUP BY ?meetup ?evidence_text ?purpose_Label
LIMIT 20
